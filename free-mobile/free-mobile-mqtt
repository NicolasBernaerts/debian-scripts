#!/bin/bash
# ---------------------------------------------------
# Retrieve Free mobile line data from your account
# and publish it on your MQTT broker
#
# This script needs mosquitto_pub, git, jq and pup utility
# Here is how to install them on Debian/Ubuntu :
#   $ sudo apt install mosquitto-clients git jq golang-go
#   $ go get github.com/ericchiang/pup
#   $ sudo mv ~/go/bin/pup /usr/local/bin 
#
# Revision history :
#   29/12/2021, V1.0 - Creation by N. Bernaerts
#   30/12/2021, V1.1 - Handle optional MQTT parameter
#                      Add tools check at startup
#   20/03/2023, v1.2 - Update following Free account page change
#                      Add --html and --json debug options
#                      MQTT data have changed !
# ---------------------------------------------------

# Please fill up this section according
# to your Free Mobile account and MQTT broker
# =======================================

YOUR_FREE_LOGIN="YourLogin"
YOUR_FREE_PWD="YourPassword"

MQTT_URL="www.your.mqtt.broker"
MQTT_TOPIC="topic/of/your/account"

# optional
MQTT_PORT="1883"
MQTT_LOGIN="BrokerLogin"
MQTT_PWD="BrokerPassword"

# =======================================
 
# free mobile account page
FREE_URL="https://mobile.free.fr/account/"

#   Check tools availability
command -v curl >/dev/null 2>&1 || { echo "[Error] Please install curl"; exit 1; }
command -v git >/dev/null 2>&1 || { echo "[Error] Please install git"; exit 1; }
command -v jq >/dev/null 2>&1 || { echo "[Error] Please install jq"; exit 1; }
command -v pup >/dev/null 2>&1 || { echo "[Error] Please install pup"; exit 1; }
command -v mosquitto_pub >/dev/null 2>&1 || { echo "[Error] Please install mosquitto_pub (mosquitto-clients)"; exit 1; }

# if no argument, display help
if [ $# -eq 0 ] 
then
  echo "Tool to publish free mobile account data over MQTT"
  echo "Parameters are :"
  echo "  --html            Print HTML page code"
  echo "  --json            Print resulting JSON"
  exit
fi

# loop to retrieve arguments
while test $# -gt 0
do
  case "$1" in
    "--html") shift; HTML="ok"; shift; ;;
    "--json") shift; JSON="ok"; shift; ;;
    *) shift; ;;
  esac
done

# generate and go to temporary directory
TMP_DIR=$(mktemp -t -d "free-XXXXXXXX")
TMP_COOKIE="${TMP_DIR}/cookie.txt"
TMP_HTML="${TMP_DIR}/page.html"
TMP_JSON="${TMP_DIR}/page.json"
TMP_MQTT="${TMP_DIR}/mqtt.json"

# read account data
curl --silent --cookie-jar "${TMP_COOKIE}" --form "login-ident=${YOUR_FREE_LOGIN}" --form "login-pwd=${YOUR_FREE_PWD}" "${FREE_URL}"
curl --silent -b "${TMP_COOKIE}" "${FREE_URL}" > "${TMP_HTML}"

# extract line
FREE_LINE=$(cat "${TMP_HTML}" | pup 'div.current-user__infos div.smaller span' json{} | jq --raw-output '.[1] .text')

# extract local data
cat "${TMP_HTML}" | pup  'div.number-circle p span' json{} > "${TMP_JSON}"
LOCAL_DATA=$(cat "${TMP_JSON}" | jq --raw-output '.[0] .text' )
LOCAL_CALL=$(cat "${TMP_JSON}" | jq --raw-output '.[1] .text' )
LOCAL_SMS=$(cat "${TMP_JSON}" | jq --raw-output '.[2] .text' )
LOCAL_MMS=$(cat "${TMP_JSON}" | jq --raw-output '.[3] .text' )

# extract roaming data
ROAMING_DATA=$(cat "${TMP_JSON}" | jq --raw-output '.[4] .text' )
ROAMING_CALL=$(cat "${TMP_JSON}" | jq --raw-output '.[5] .text' )
ROAMING_SMS=$(cat "${TMP_JSON}" | jq --raw-output '.[6] .text' )
ROAMING_MMS=$(cat "${TMP_JSON}" | jq --raw-output '.[7] .text' )

# generate MQTT JSON
echo "{\"line\":\"${FREE_LINE}\",\"local\":{\"data\":\"${LOCAL_DATA}\",\"call\":\"${LOCAL_CALL}\",\"sms\":\"${LOCAL_SMS}\",\"mms\":\"${LOCAL_MMS}\"},\"roaming\":{\"data\":\"${ROAMING_DATA}\",\"call\":\"${ROAMING_CALL}\",\"sms\":\"${ROAMING_SMS}\",\"mms\":\"${ROAMING_MMS}\"}}" > "${TMP_MQTT}"

# publish value
cat "${TMP_MQTT}" | mosquitto_pub -h "${MQTT_URL}" -p "${MQTT_PORT}" -u "${MQTT_LOGIN}" -P "${MQTT_PWD}" -t "${MQTT_TOPIC}" -l

# if needed, display HTML or JSON code
[ "${HTML}" = "ok" ] && cat "${TMP_HTML}"
[ "${JSON}" = "ok" ] && cat "${TMP_MQTT}"

# remove temporary directory
rm -r "${TMP_DIR}"


