#!/bin/bash
# ---------------------------------------------------
#   RSync wrapper script
#
# Parameters :  Same as RSync and
#  --telegram <title>  : send an telegram message after rsync
#
# Revision history :
#   20/02/2022, V1.0 - Creation by N. Bernaerts 
# ---------------------------------------------------

# -------------------------------------------------------
#   Check tools availability
# -------------------------------------------------------

command -v /usr/bin/rsync >/dev/null 2>&1 || { echo "[Error] Please install rsync"; exit 1; }
command -v telegram-notify >/dev/null 2>&1 || { echo "[Error] Please install telegram-notify"; exit 1; }

# -------------------------------------------------------
#   Loop to load arguments
# -------------------------------------------------------

# if no argument, display help
if [ $# -eq 0 ] 
then
  echo "RSync wrapper to handle Telegram notifications"
  echo "Takes all rsync paramaters and :"
  echo "  --telegram <title>       Send Telegram notification with this title"
  exit
fi

# loop to retrieve arguments
while test $# -gt 0
do
  case "$1" in
    "--telegram") shift; TELEGRAM="$1"; shift; ;;
    *) ARR_PARAM=( "${ARR_PARAM[@]}" "$1" ); shift; ;;
  esac
done

# run rsync
echo "Running : rsync ${ARR_PARAM[@]}"
/usr/bin/rsync "${ARR_PARAM[@]}"
RSYNC_CODE=$?

# send telegram notification
if [ "${TELEGRAM}" ]
then
	# set success or failure status
	[ ${RSYNC_CODE} -eq 0 ] && ARR_PARAM=( "--success" ) || ARR_PARAM=( "--error" )

	# set parameters
	ARR_PARAM=( "${ARR_PARAM[@]}" "--silent" "--quiet" "--title" "${TELEGRAM}" )

	# send telegram notification
	telegram-notify "${ARR_PARAM[@]}"
fi

# return rsync code
exit ${RSYNC_CODE}
